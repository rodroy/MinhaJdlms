/**
 * This class file was automatically generated by jASN1 v1.5.0 (http://www.openmuc.org)
 */

package org.openmuc.jdlms.internal.asn1.iso.acse;

import java.io.IOException;
import java.io.InputStream;

import org.openmuc.jasn1.ber.BerByteArrayOutputStream;
import org.openmuc.jasn1.ber.BerIdentifier;
import org.openmuc.jasn1.ber.types.BerOctetString;

public class AP_title {

	public byte[] code = null;
	public AP_title_form2 ap_title_form2 = null;

	public AP_title() {
	}

	public AP_title(byte[] code) {
		this.code = code;
	}

	public AP_title(AP_title_form2 ap_title_form2) {
		this.ap_title_form2 = ap_title_form2;
	}

	public int encode(BerByteArrayOutputStream os, boolean explicit) throws IOException {
		if (code != null) {
			for (int i = code.length - 1; i >= 0; i--) {
				os.write(code[i]);
			}
			return code.length;

		}
		int codeLength = 0;
		if (ap_title_form2 != null) {
			codeLength += ap_title_form2.encode(os, true);
			return codeLength;

		}

		throw new IOException("Error encoding BerChoice: No item in choice was selected.");
	}

	public int decode(InputStream is, BerIdentifier berIdentifier) throws IOException {
		int codeLength = 0;
		BerIdentifier passedIdentifier = berIdentifier;

		if (berIdentifier == null) {
			berIdentifier = new BerIdentifier();
			codeLength += berIdentifier.decode(is);
		}
		if (berIdentifier.equals(BerOctetString.identifier)) {
			ap_title_form2 = new AP_title_form2();
			codeLength += ap_title_form2.decode(is, false);
			return codeLength;
		}

		if (passedIdentifier != null) {
			return 0;
		}
		throw new IOException("Error decoding BerChoice: Identifier matched to no item.");
	}

	public void encodeAndSave(int encodingSizeGuess) throws IOException {
		BerByteArrayOutputStream os = new BerByteArrayOutputStream(encodingSizeGuess);
		encode(os, false);
		code = os.getArray();
	}

	@Override
	public String toString() {
		if (ap_title_form2 != null) {
			return "CHOICE{ap_title_form2: " + ap_title_form2 + "}";
		}

		return "unknown";
	}

}
