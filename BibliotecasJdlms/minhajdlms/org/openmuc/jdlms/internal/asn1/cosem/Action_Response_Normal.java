/**
 * This class file was automatically generated by the AXDR compiler that is part of jDLMS (http://www.openmuc.org)
 */

package org.openmuc.jdlms.internal.asn1.cosem;

import java.io.IOException;
import java.io.InputStream;

import org.openmuc.jasn1.ber.BerByteArrayOutputStream;
import org.openmuc.jdlms.internal.asn1.axdr.AxdrType;

public class Action_Response_Normal implements AxdrType {

	public byte[] code = null;
	public Invoke_Id_And_Priority invoke_id_and_priority = null;

	public Action_Response_With_Optional_Data single_response = null;

	public Action_Response_Normal() {
	}

	public Action_Response_Normal(byte[] code) {
		this.code = code;
	}

	public Action_Response_Normal(Invoke_Id_And_Priority invoke_id_and_priority,
			Action_Response_With_Optional_Data single_response) {
		this.invoke_id_and_priority = invoke_id_and_priority;
		this.single_response = single_response;
	}

	@Override
	public int encode(BerByteArrayOutputStream axdrOStream) throws IOException {

		int codeLength;

		if (code != null) {
			codeLength = code.length;
			for (int i = code.length - 1; i >= 0; i--) {
				axdrOStream.write(code[i]);
			}
		}
		else {
			codeLength = 0;
			codeLength += single_response.encode(axdrOStream);

			codeLength += invoke_id_and_priority.encode(axdrOStream);

		}

		return codeLength;

	}

	@Override
	public int decode(InputStream iStream) throws IOException {
		int codeLength = 0;

		invoke_id_and_priority = new Invoke_Id_And_Priority();
		codeLength += invoke_id_and_priority.decode(iStream);

		single_response = new Action_Response_With_Optional_Data();
		codeLength += single_response.decode(iStream);

		return codeLength;
	}

	public void encodeAndSave(int encodingSizeGuess) throws IOException {
		BerByteArrayOutputStream axdrOStream = new BerByteArrayOutputStream(encodingSizeGuess);
		encode(axdrOStream);
		code = axdrOStream.getArray();
	}

	@Override
	public String toString() {
		return "sequence: {" + "invoke_id_and_priority: " + invoke_id_and_priority + ", single_response: "
				+ single_response + "}";
	}

}
