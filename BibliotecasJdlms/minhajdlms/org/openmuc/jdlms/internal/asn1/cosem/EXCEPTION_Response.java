/**
 * This class file was automatically generated by the AXDR compiler that is part of jDLMS (http://www.openmuc.org)
 */

package org.openmuc.jdlms.internal.asn1.cosem;

import java.io.IOException;
import java.io.InputStream;

import org.openmuc.jasn1.ber.BerByteArrayOutputStream;
import org.openmuc.jdlms.internal.asn1.axdr.AxdrType;

public class EXCEPTION_Response implements AxdrType {

	public byte[] code = null;
	public Enum state_error = null;

	public Enum service_error = null;

	public EXCEPTION_Response() {
	}

	public EXCEPTION_Response(byte[] code) {
		this.code = code;
	}

	public EXCEPTION_Response(Enum state_error, Enum service_error) {
		this.state_error = state_error;
		this.service_error = service_error;
	}

	@Override
	public int encode(BerByteArrayOutputStream axdrOStream) throws IOException {

		int codeLength;

		if (code != null) {
			codeLength = code.length;
			for (int i = code.length - 1; i >= 0; i--) {
				axdrOStream.write(code[i]);
			}
		}
		else {
			codeLength = 0;
			codeLength += service_error.encode(axdrOStream);

			codeLength += state_error.encode(axdrOStream);

		}

		return codeLength;

	}

	@Override
	public int decode(InputStream iStream) throws IOException {
		int codeLength = 0;

		state_error = new Enum();
		codeLength += state_error.decode(iStream);

		service_error = new Enum();
		codeLength += service_error.decode(iStream);

		return codeLength;
	}

	public void encodeAndSave(int encodingSizeGuess) throws IOException {
		BerByteArrayOutputStream axdrOStream = new BerByteArrayOutputStream(encodingSizeGuess);
		encode(axdrOStream);
		code = axdrOStream.getArray();
	}

	@Override
	public String toString() {
		return "sequence: {" + "state_error: " + state_error + ", service_error: " + service_error + "}";
	}

}
