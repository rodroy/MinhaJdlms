/**
 * This class file was automatically generated by the AXDR compiler that is part of jDLMS (http://www.openmuc.org)
 */

package org.openmuc.jdlms.internal.asn1.cosem;

import java.io.IOException;
import java.io.InputStream;

import org.openmuc.jasn1.ber.BerByteArrayOutputStream;
import org.openmuc.jdlms.internal.asn1.axdr.AxdrType;
import org.openmuc.jdlms.internal.asn1.axdr.types.AxdrOptional;

public class EVENT_NOTIFICATION_Request implements AxdrType {

	public byte[] code = null;
	public AxdrOptional<Cosem_Date_Time> time = new AxdrOptional<Cosem_Date_Time>(new Cosem_Date_Time(), false);

	public Cosem_Attribute_Descriptor cosem_attribute_descriptor = null;

	public Data attribute_value = null;

	public EVENT_NOTIFICATION_Request() {
	}

	public EVENT_NOTIFICATION_Request(byte[] code) {
		this.code = code;
	}

	public EVENT_NOTIFICATION_Request(Cosem_Date_Time time, Cosem_Attribute_Descriptor cosem_attribute_descriptor,
			Data attribute_value) {
		this.time.setValue(time);
		this.cosem_attribute_descriptor = cosem_attribute_descriptor;
		this.attribute_value = attribute_value;
	}

	@Override
	public int encode(BerByteArrayOutputStream axdrOStream) throws IOException {

		int codeLength;

		if (code != null) {
			codeLength = code.length;
			for (int i = code.length - 1; i >= 0; i--) {
				axdrOStream.write(code[i]);
			}
		}
		else {
			codeLength = 0;
			codeLength += attribute_value.encode(axdrOStream);

			codeLength += cosem_attribute_descriptor.encode(axdrOStream);

			codeLength += time.encode(axdrOStream);

		}

		return codeLength;

	}

	@Override
	public int decode(InputStream iStream) throws IOException {
		int codeLength = 0;

		time = new AxdrOptional<Cosem_Date_Time>(new Cosem_Date_Time(), false);
		codeLength += time.decode(iStream);

		cosem_attribute_descriptor = new Cosem_Attribute_Descriptor();
		codeLength += cosem_attribute_descriptor.decode(iStream);

		attribute_value = new Data();
		codeLength += attribute_value.decode(iStream);

		return codeLength;
	}

	public void encodeAndSave(int encodingSizeGuess) throws IOException {
		BerByteArrayOutputStream axdrOStream = new BerByteArrayOutputStream(encodingSizeGuess);
		encode(axdrOStream);
		code = axdrOStream.getArray();
	}

	@Override
	public String toString() {
		return "sequence: {" + "time: " + time + ", cosem_attribute_descriptor: " + cosem_attribute_descriptor
				+ ", attribute_value: " + attribute_value + "}";
	}

}
